name: Scheduled Build & Run

on:
  schedule:
    - cron: "*/30 * * * *" # 30분마다 실행
  workflow_dispatch: # 수동 실행 기능 추가

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    
    env:
      MODE: ${{ vars.MODE }}
      SEARCH_KEYWORD: ${{ vars.SEARCH_KEYWORD }}
    
    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACTIONS_TOKEN }} # ✅ Organization 레포지토리 푸시를 위한 토큰

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Gradle Wrapper 다운로드
        run: |
          if [ ! -f ./gradlew ]; then
            echo "Gradle Wrapper not found! Downloading..."
            ./gradlew wrapper || sudo apt-get install gradle -y
          fi

      - name: Gradle 실행 권한 부여
        run: chmod +x ./gradlew

      - name: Gradle 빌드 (Wrapper가 없으면 직접 실행)
        run: |
          if [ -f ./gradlew ]; then
            ./gradlew build
          else
            gradle build
          fi

      - name: 실행
        run: java -jar build/libs/*.jar
        env:
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}

      - name: 변경사항 커밋 및 푸시 (자동 병합 적용)
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          # 최신 원격 변경 사항 가져오기 (자동 병합)
          git pull origin main --rebase || echo "자동 병합 실패 - 수동 푸시 진행"

          # 변경 사항 커밋
          git add .
          git commit -m "🔄 자동 업데이트: $(date)" || echo "변경 사항 없음"

          # 변경 사항 푸시
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }} # ✅ 푸시 권한이 필요한 경우 추가
